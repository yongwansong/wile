{% comment %}{{ block.settings.color_scheme }}{% endcomment %}

<div class="announcement-bar" role="region" aria-label="{{ 'sections.header.announcement' | t }}" {{ block.shopify_attributes }}>

{%- for block in section.blocks -%}

	{% assign pdpOnly = block.settings.pdp_only %}
	{% assign isABtest = block.settings.ab_test %}
  {%- case block.type -%}
  {%- when 'announcement' -%}
    
	  {% if pdpOnly == true %}
      {% if template contains 'product' %}
        {% comment %} To be shown on the PDPs ribbon only{% endcomment %}
        {%- if block.settings.text != blank -%}
          {%- if block.settings.link != blank -%}
            <a href="{{ block.settings.link }}" class="announcement-bar__link link link--text focus-inset animate-arrow">
          {%- endif -%}
        <span class="announcement-bar__text">
                {{ block.settings.text | escape }}
              </span>
          {%- if block.settings.link != blank -%}
            </a>
          {%- endif -%}
        {%- endif -%}
        {% comment %} END OF {% endcomment %}
      {% endif %}
	  {% else %}
    {% if isABtest != true%}
      {%- if block.settings.text != blank -%}
        {%- if block.settings.link != blank -%}
          <a href="{{ block.settings.link }}" class="announcement-bar__link link link--text focus-inset animate-arrow original-announcement">
        {%- endif -%}
          <span class="announcement-bar__text original-announcement">
            {{ block.settings.text | escape }}
          </span>
        {%- if block.settings.link != blank -%}
          </a>
        {%- endif -%}
      {%- endif -%}
    {% else %}
    
      <span class="test-announcement" style="color: white;">{{ block.settings.text }}</span>
    {% endif %}

   
      
        
 
        
      {% endif %}


  {%- endcase -%}
{%- endfor -%}

  </div>
  

<script>
// AB test - variant B logic

const experimentVariant = document.querySelector('body').dataset.ribbon

if (experimentVariant == 'b') {
  const $testAnnouncements = [...document.querySelectorAll('.test-announcement')]
  const rotationInterval = 2500
  
  function rotateRibbon($rotatingElements, interval) {
    let nextAnnouncementIndex = 1
    
    $rotatingElements[0].style.display = 'block'
    
    setInterval(() => {
      $rotatingElements.forEach($announcement => {
        $announcement.style.display = 'none'
      })
      $rotatingElements[nextAnnouncementIndex].style.display = 'block';
      nextAnnouncementIndex++
      if (nextAnnouncementIndex >= $rotatingElements.length) {
        nextAnnouncementIndex = 0
      }
    }, interval)
  }

  rotateRibbon($testAnnouncements, rotationInterval)
}
</script>

<style>
  .test-announcement {
    display: none;
    text-transform: uppercase;
    font-size: 12px;
  }
  .test-announcement strong {
    font-family: 'wigrum-bold';
  }
  body[data-ribbon="b"] .original-announcement {
    display: none;
  }

</style>
  
{% javascript %}

	let announcementItems = document.querySelectorAll('.announcement-bar__text');
	let announcementCurrent = 0;
	let announcementTotal = announcementItems.length;

	announcementItems[0].classList.add('active');

	function rotateItems() {

		[].forEach.call(announcementItems, function(item, index) {
			if(index == announcementCurrent) {
				item.classList.add('active');
			} else {
				item.classList.remove('active');
			}
		});
	}
	if(announcementTotal > 1) {
		setInterval(function(){
			announcementCurrent++;
			if(announcementCurrent >= announcementTotal) {
				announcementCurrent = 0;
			}
			rotateItems();
		}, 3000);
	}

	rotateItems();

{% endjavascript %}

{% schema %}
{
  "name": "t:sections.announcement-bar.name",
  "max_blocks": 12,
  "blocks": [
    {
      "type": "announcement",
      "name": "t:sections.announcement-bar.blocks.announcement.name",
      "settings": [
        {
          "type": "text",
          "id": "text",
          "default": "Welcome to our store",
          "label": "t:sections.announcement-bar.blocks.announcement.settings.text.label"
        },
        {
          "type": "select",
          "id": "color_scheme",
          "options": [
            {
              "value": "bg--green-dark",
              "label": "Dark Green"
            },
            {
              "value": "bg--yellow",
              "label": "Yellow"
            }
          ],
          "default": "bg--green-dark",
          "label": "Dark Green"
        },
        {
          "type": "url",
          "id": "link",
          "label": "t:sections.announcement-bar.blocks.announcement.settings.link.label"
        },
		{
  			"type": "checkbox",
  			"id": "pdp_only",
  			"label": "PDP Only",
  			"default": false
		},
		{
      "type":"checkbox",
      "id": "ab_test",
      "label": "Belongs to AB test",
      "default": false
		}

      ]
    }
  ],
  "default": {
    "blocks": [
      {
        "type": "announcement"
      }
    ]
  }
}
{% endschema %}
